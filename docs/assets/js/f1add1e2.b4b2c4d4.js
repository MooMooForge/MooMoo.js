"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[480],{3905:(e,a,r)=>{r.d(a,{Zo:()=>y,kt:()=>d});var t=r(7294);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function o(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?o(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function i(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=t.createContext({}),p=function(e){var a=t.useContext(s),r=a;return e&&(r="function"==typeof e?e(a):l(l({},a),e)),r},y=function(e){var a=p(e.components);return t.createElement(s.Provider,{value:a},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,y=i(e,["components","mdxType","originalType","parentName"]),c=p(r),m=n,d=c["".concat(s,".").concat(m)]||c[m]||u[m]||o;return r?t.createElement(d,l(l({ref:a},y),{},{components:r})):t.createElement(d,l({ref:a},y))}));function d(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i[c]="string"==typeof e?e:n,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4585:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var t=r(7462),n=(r(7294),r(3905));const o={sidebar_position:4},l=void 0,i={unversionedId:"Managers/GamePlayers",id:"Managers/GamePlayers",title:"GamePlayers",description:"GamePlayer Manager",source:"@site/docs/Managers/GamePlayers.md",sourceDirName:"Managers",slug:"/Managers/GamePlayers",permalink:"/MooMoo.js/Managers/GamePlayers",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"ActivePlayers",permalink:"/MooMoo.js/Managers/ActivePlayers"},next:{title:"LeaderBoard",permalink:"/MooMoo.js/Managers/LeaderBoard"}},s={},p=[{value:"GamePlayer Manager",id:"gameplayer-manager",level:2}],y={toc:p};function c(e){let{components:a,...r}=e;return(0,n.kt)("wrapper",(0,t.Z)({},y,r,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"gameplayer-manager"},"GamePlayer Manager"),(0,n.kt)("p",null,"The GamePlayer Manager is a component of MooMoo.js that provides information about all players that are currently in the game. "),(0,n.kt)("p",null,"Note, that this only includes players that either have been or are on the Leaderboard, players that have been rendered, or players that joined the game after you did."),(0,n.kt)("p",null,"The API tries as its best to keep track of all players that have been in the game, but it is not always possible to do so."),(0,n.kt)("p",null,"You can access the GamePlayer Manager and retrieve information about the players like this:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"let gamePlayerManager = MooMoo.GamePlayerManager;\n\n// Get all players\nlet players = gamePlayerManager.players;\n\n// Get a player by their SID\nlet player = gamePlayerManager.getPlayerBySid(sid);\n\n// Get a player by their ID\nlet player = gamePlayerManager.getPlayerById(id);\n\n// Get a player by their name\nlet player = gamePlayerManager.getPlayerByName(name);\n")),(0,n.kt)("p",null,"Same as for ActivePlayerManager, when using the ",(0,n.kt)("inlineCode",{parentName:"p"},"getPlayerByName")," method, it will return an array of players if there are more than one player with the same name. Otherwise, it will return a single player object."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"players")," property will contain an array of player objects with the following structure:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'{\n    players: [\n        {\n         "sid": 4,\n         "name": "unknown",\n         "id": "5TapKvA56N",\n         "x": 5951,\n         "y": 8207,\n         "dir": -2.65\n        }\n    ]   \n}\n')),(0,n.kt)("p",null,"Though, it may be possible that it looks like this:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'{\n    players: [\n        {\n         "sid": 4,\n         "name": "unknown"\n        }\n    ]   \n}\n')),(0,n.kt)("p",null,"This is because the API could not view any other information that displayed on the leaderboard."))}c.isMDXComponent=!0}}]);