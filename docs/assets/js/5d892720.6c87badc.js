"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[481],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=c(n),u=a,g=p["".concat(s,".").concat(u)]||p[u]||d[u]||o;return n?r.createElement(g,i(i({ref:t},m),{},{components:n})):r.createElement(g,i({ref:t},m))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4173:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:7},i=void 0,l={unversionedId:"Managers/Commands",id:"Managers/Commands",title:"Commands",description:"Command Manager",source:"@site/docs/Managers/Commands.md",sourceDirName:"Managers",slug:"/Managers/Commands",permalink:"/MooMoo.js/Managers/Commands",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Objects",permalink:"/MooMoo.js/Managers/Objects"},next:{title:"Packet Manager",permalink:"/MooMoo.js/Managers/PacketManager"}},s={},c=[{value:"Command Manager",id:"command-manager",level:2}],m={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"command-manager"},"Command Manager"),(0,a.kt)("p",null,"The Command Manager is a tool, which provides help creating ingame commands, managing them and executing them."),(0,a.kt)("p",null,"To access the Command Manager, you can write the following code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"let CommandManager = MooMoo.CommandManager;\n")),(0,a.kt)("p",null,"You can register a command like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'CommandManager.registerCommand("test", (Command, args) => {\n    // reply to the Command with a chat message\n    Command.reply("Hello, world!");\n\n    // do stuff with the arguments\n    let firstArg = args[0];\n    console.log(firstArg);\n})\n')),(0,a.kt)("p",null,'By writing this code, the commandManager will register a new command called "test", and whenever the player types "{prefix}test" in chat, the command will be executed.'),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Command")," object includes the function that executes it, and also the function that replies to the command."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"args")," object is an array of arguments that the player has passed to the command."),(0,a.kt)("p",null,"You can change the prefix for the commands by writing the following code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'CommandManager.setPrefix("!");\n')),(0,a.kt)("p",null,'This will change the prefix to "!".'),(0,a.kt)("p",null,"The commands will get executed whenever the player types in a chat message starting with the prefix."))}p.isMDXComponent=!0}}]);