"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[245],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},c=Object.keys(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),i=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=i(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=i(a),k=n,h=u["".concat(s,".").concat(k)]||u[k]||d[k]||c;return a?r.createElement(h,o(o({ref:t},p),{},{components:a})):r.createElement(h,o({ref:t},p))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,o=new Array(c);o[0]=k;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:n,o[1]=l;for(var i=2;i<c;i++)o[i]=a[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}k.displayName="MDXCreateElement"},8768:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>l,toc:()=>i});var r=a(7462),n=(a(7294),a(3905));const c={},o="Packet Interceptor",l={unversionedId:"Managers/PacketInterceptor",id:"Managers/PacketInterceptor",title:"Packet Interceptor",description:"The PacketInterceptor class is used to intercept packets that are sent and received by the client. It allows users to add callback functions that will be applied to the packets.",source:"@site/docs/Managers/PacketInterceptor.md",sourceDirName:"Managers",slug:"/Managers/PacketInterceptor",permalink:"/MooMoo.js/Managers/PacketInterceptor",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Commands",permalink:"/MooMoo.js/Managers/Commands"},next:{title:"Packet Manager",permalink:"/MooMoo.js/Managers/PacketManager"}},s={},i=[{value:"Properties",id:"properties",level:2},{value:"Usage",id:"usage",level:2}],p={toc:i};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"packet-interceptor"},"Packet Interceptor"),(0,n.kt)("p",null,"The PacketInterceptor class is used to intercept packets that are sent and received by the client. It allows users to add callback functions that will be applied to the packets."),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"clientCallbacks: A map that stores all the callback functions that are registered for client packets. The keys are unique IDs, and the values are the callback functions."),(0,n.kt)("li",{parentName:"ul"},"serverCallbacks: A map that stores all the callback functions that are registered for server packets. The keys are unique IDs, and the values are the callback functions.\nMethods"),(0,n.kt)("li",{parentName:"ul"},'addCallback(type: "client" | "server", callback: Function): number: This method is used to add a callback function for a specific type of packet. The type parameter should be either "client" or "server", and the callback parameter should be a function that takes in a single argument (the packet) and returns the modified packet. This method returns a unique ID for the callback function that was added.')),(0,n.kt)("p",null,'When the type is "client", the callback function will be applied ',(0,n.kt)("strong",{parentName:"p"},"BEFORE")," the packet is sent to the server. This means that for example if you want to modify a chat packet, you can add a new callback and modify the packet."),(0,n.kt)("p",null,"It works the same for server. The server type is used to modify packets ",(0,n.kt)("strong",{parentName:"p"},"BEFORE")," the bundle receives them. You can spoof accessories, change the player's coordinates, etc."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"removeCallback(callbackId: number): This method is used to remove a callback function by its ID. The callbackId parameter should be the ID that was returned when the callback function was added.")),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("p",null,"You can add callback functions for client and server packets using the addCallback method:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'const clientCallbackId = interceptor.addCallback("client", (packet) => {\n    // modify the packet here\n    return packet;\n});\n\nconst serverCallbackId = interceptor.addCallback("server", (packet) => {\n    // modify the packet here\n    return packet;\n});\n')),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"NOTE"),": The packet in the callback function is not decoded, that means that you will have to use msgpack to decode it, and then ",(0,n.kt)("strong",{parentName:"p"},"RETURN THE ENCODED PACKET"),"."),(0,n.kt)("p",null,"If you do not return a encoded packet, the packet will fail."),(0,n.kt)("p",null,"You can remove callbacks by their ID using the removeCallback method"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"interceptor.removeCallback(clientCallbackId);\n")))}u.isMDXComponent=!0}}]);